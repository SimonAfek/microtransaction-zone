@{
    Layout = "/Views/Shared/_PendingLayout.cshtml";
}

@using DIHMT.Models
@using DIHMT.Static
@model Tuple<DisplayGame, PendingDisplayModel>

@{
    ViewBag.Title = $"Pending - {Model.Item2.GameName}";
}

@if (!Model.Item1.IsRated)
{
    <h2><a href="@Url.Action("Index", "Game", new { id = Model.Item2.GameId })" target="_blank">@Model.Item2.GameName</a></h2>
    <br />
    <h3>This game currently has no rating</h3>
    <br />
    @Html.Partial("Pending_Partial", Model.Item2)
}

else
{
    <div class="col-md-12">
        <h2><a href="@Url.Action("Index", "Game", new { id = Model.Item2.GameId })" target="_blank">@Model.Item2.GameName</a></h2>
    </div>
    <div class="col-md-6">
        <h3>Existing rating</h3>

        <p>
            <label>
                <input type="checkbox" name="Flags" checked="@Model.Item1.RatingModel.IsSpotless" disabled /> Spotless
            </label>
        </p>

        <p>
            <strong>Horse armor: </strong>
            <ul>
                <li>
                    <label>
                        <input type="radio" name="Flags" checked="@(!(Model.Item1.RatingModel.Flags.Contains((int) EnumTag.HorseArmor) || Model.Item1.RatingModel.Flags.Contains((int) EnumTag.BulkOrderHorseArmor)))" disabled /> None
                    </label>
                </li>
                <li>
                    <label>
                        <input type="radio" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains((int) EnumTag.HorseArmor)" disabled /> Some
                    </label>
                </li>
                <li>
                    <label>
                        <input type="radio" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains((int) EnumTag.BulkOrderHorseArmor)" disabled /> A lot
                    </label>
                </li>
            </ul>
        </p>

        @foreach (var v in GameHelpers.GetRatings().Where(x => Model.Item1.RatingModel.MonetizationFlags.Contains(x.Id) && x.Id > (int)EnumTag.Spotless))
        {
            <p>
                <label>
                    <input type="checkbox" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains(v.Id)" disabled /> @v.Name
                </label>
            </p>
        }

        @foreach (var v in GameHelpers.GetRatings().Where(x => !Model.Item1.RatingModel.MonetizationFlags.Contains(x.Id) && x.Id > (int)EnumTag.Spotless))
        {
            <p>
                <label>
                    <input type="checkbox" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains(v.Id)" disabled /> @v.Name
                </label>
            </p>
        }
        <div class="form-group">
            <p>
                @Html.LabelFor(model => model.Item1.Basically, htmlAttributes: new { @class = "control-label col-md-2 " })
            </p>
            <p>
                <input type="text" name="Basically" size="280" value="@Model.Item1.Basically" class="form-control wide-input" maxlength="280" />
            </p>
        </div>

        <div class="form-group">
            <p>
                @Html.LabelFor(model => model.Item1.RatingExplanation, htmlAttributes: new { @class = "control-label col-md-2" })
            </p>
            <p>
                <textarea name="RatingExplanation" class="wide-input" rows="10" cols="100" maxlength="4000">@Model.Item1.RatingExplanation</textarea>
            </p>
        </div>
    </div>

    <div class="col-md-6">
        @Html.Partial("Pending_Partial", Model.Item2)
    </div>
}
