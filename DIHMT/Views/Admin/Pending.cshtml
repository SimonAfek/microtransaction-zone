@{
    Layout = "/Views/Shared/_PendingLayout.cshtml";
}

@using DIHMT.Models
@using DIHMT.Static
@model Tuple<DisplayGame, PendingDisplayModel>

@{
    ViewBag.Title = $"Pending - {Model.Item2.GameName}";
}

<div class="basic container">
    @if (!Model.Item1.IsRated)
    {
        <p><h1><a href="@Url.Action("Index", "Game", new { id = Model.Item2.GameId })" target="_blank">@Model.Item2.GameName</a></h1></p>
        <p><strong>This game currently has no rating</strong></p>

        @Html.Partial("Pending_Partial", Model.Item2)
    }

    else
    {
        <p><h1><a href="@Url.Action("Index", "Game", new { id = Model.Item2.GameId })" target="_blank">@Model.Item2.GameName</a></h1></p>

        <div>
            <div class="page-title">Existing rating</div>

            <p>
                <label>
                    <input type="checkbox" name="Flags" checked="@Model.Item1.RatingModel.IsSpotless" disabled /> Spotless
                </label>
            </p>

            <p>
                <strong>Horse Armor</strong>
                <ul>
                    <li>
                        <label>
                            <input type="radio" name="Flags" checked="@(!(Model.Item1.RatingModel.Flags.Contains((int) EnumTag.HorseArmor) || Model.Item1.RatingModel.Flags.Contains((int) EnumTag.BulkOrderHorseArmor)))" disabled /> No
                        </label>
                    </li>
                    <li>
                        <label>
                            <input type="radio" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains((int) EnumTag.HorseArmor)" disabled /> Yes
                        </label>
                    </li>
                    <li>
                        <label>
                            <input type="radio" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains((int) EnumTag.BulkOrderHorseArmor)" disabled /> Bulk Order
                        </label>
                    </li>
                </ul>
            </p>

            @foreach (var v in GameHelpers.GetRatings().Where(x => Model.Item1.RatingModel.MonetizationFlags.Contains(x.Id) && x.Id > (int)EnumTag.Spotless))
            {
                <p>
                    <label>
                        <input type="checkbox" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains(v.Id)" disabled /> @v.Name
                    </label>
                </p>
            }

            @foreach (var v in GameHelpers.GetRatings().Where(x => !Model.Item1.RatingModel.MonetizationFlags.Contains(x.Id) && x.Id > (int)EnumTag.Spotless))
            {
                <p>
                    <label>
                        <input type="checkbox" name="Flags" checked="@Model.Item1.RatingModel.Flags.Contains(v.Id)" disabled /> @v.Name
                    </label>
                </p>
            }
            <div class="form-group">
                <p>
                    @Html.LabelFor(model => model.Item1.Basically, htmlAttributes: new { @class = "control-label col-md-2 " })
                </p>
                <p>
                    <input type="text" name="Basically" size="280" value="@Model.Item1.Basically" class="form-control wide-input" maxlength="280" />
                </p>
            </div>

            <div class="form-group">
                <p>
                    @Html.LabelFor(model => model.Item1.RatingExplanation, htmlAttributes: new { @class = "control-label col-md-2" })
                </p>
                <p>
                    <textarea name="RatingExplanation" class="wide-input" rows="10" cols="100" maxlength="4000">@Model.Item1.RatingExplanation</textarea>
                </p>
            </div>
        </div>

        <div>
            @Html.Partial("Pending_Partial", Model.Item2)
        </div>
    }
</div>