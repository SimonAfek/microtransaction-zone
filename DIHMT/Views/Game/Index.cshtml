@model DIHMT.Models.DisplayGame

@{
    ViewBag.Title = @Model.Name;
}

<h2>@Model.Name</h2>

<img src="@Model.SmallImageUrl" />

<h4>About this game</h4>
<p>
    Platforms:
    @for (var i = 0; i < Model.Platforms.Count; i++)
    {
        if (i < Model.Platforms.Count - 1)
        {
            <text>@Model.Platforms[i].Abbreviation | </text>
        }

        else
        {
            @Model.Platforms[i].Abbreviation
        }
    }
</p>

@if (Model.Genres != null && Model.Genres.Any())
{
    <p>
        Genres:
        @for (var i = 0; i < Model.Genres.Count; i++)
        {
            if (i < Model.Genres.Count - 1)
            {
                <text>@Model.Genres[i].Name (id @Model.Genres[i].Id) | </text>
            }

            else
            {
                <text>@Model.Genres[i].Name (id @Model.Genres[i].Id)</text>
            }
        }
    </p>
}

<p>@Model.GameSummary (For more info about this game, check out <a href="@Model.GbSiteDetailUrl" target="_blank">its entry on the Giant Bomb Wiki.</a>)</p>

@if (Model.IsRated)
{
    if (Model.Ratings != null && Model.Ratings.Any())
    {
        <h4>Quick monetization info</h4>

        foreach (var v in Model.Ratings)
        {
            <p><strong>@v.Name:</strong> @v.ShortDescription</p>
        }
    }

    else
    {
        <p>This game does not fulfill the conditions for any of our monetization classifications - please see the description below for further info.</p>
    }


    <h4>More information</h4>
    <p>
        @if (string.IsNullOrEmpty(Model.RatingExplanation))
        {
            <i>No reason for this game's rating is available.</i>
        }

        else
        {
            @Html.Raw(HttpUtility.HtmlEncode(Model.RatingExplanation).Replace("\n", "<br/>"))
        }
    </p>
}

<h3>Submit/edit rating</h3>

@Html.Partial("Submit", Model.RatingModel)