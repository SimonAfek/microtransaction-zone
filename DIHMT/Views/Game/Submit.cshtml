@using System.Web.Configuration
@using DIHMT.Models
@using DIHMT.Static
@model RatingInputModel

@helper RatingLamp(DbRating v)
{
    var isSpotless = v.Id == (int)EnumTag.Spotless;
    var isF2P = v.Id == (int)EnumTag.F2P;
    var isMonetization = !(isSpotless || isF2P);

    <div class="form-check @(isMonetization ? "hide-when-spotless" : "")">
        <input type="checkbox" name="Flags" value="@v.Id" checked="@Model.Flags.Contains(v.Id)" id="@($"submission-checkbox-{v.Id}")" class="@(isSpotless ? "spotless-checkbox " : string.Empty)@(isMonetization ? "monetization-input " : string.Empty)submission-checkbox" />
        <label for="@($"submission-checkbox-{v.Id}")">
            <img class="game-flag-img" src="@v.ImageUrl" />
        </label>
        <div class="game-flag-box">
            <label for="@($"submission-checkbox-{v.Id}")" class="game-flag-description">
                <strong class="flag-name">@v.Name</strong>
                <br />
                @v.ShortDescription
            </label>
        </div>
    </div>
}

@foreach (DisplayGamePlatform v in ViewBag.Platforms)
{
    <input type="hidden" class="platform-id" value="@v.Id" />
}

@using (Html.BeginForm("SubmitRating", "Game", FormMethod.Post, new { id = "submissionform", style = "display: none", autocomplete = "off" }))
{
    var ratings = GameHelpers.GetRatings();
    var spotlessRating = ratings.First(x => x.Id == (int)EnumTag.Spotless);
    var f2pRating = ratings.First(x => x.Id == (int)EnumTag.F2P);

    @Html.AntiForgeryToken()

    <div class="successmessage"></div>
    <div class="failuremessage"></div>

    <div class="submission-form-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group row justify-content-end">
            <div class="col-sm-auto">
                <button type="button" area-label="Close" class="close submission-form-cancel-button">
                    <span area-hidden="true">&times;</span>
                </button>

            </div>
        </div>

        <p>
            Hi there! If this is your first time submitting something to the site, please take a minute or two to read our <a href="@Url.Action("Tags", "Home")" target="_blank">Tag overview</a> and <a href="@Url.Action("SubmissionGuide", "Home")" target="_blank">Submission guide</a>.
            That'll make it much easier for us to get your submission reviewed.
        </p>

        <!-- BASICALLY... -->
        <div class="form-group row no-gutters">
            @* TODO: Don't use ViewBag for passing parameters through -- need a VM that has GameName. *@
            <h3>@Html.LabelFor(model => model.Basically, $"Basically, {ViewBag.GameName}...", new { @class = "control-label" })</h3>

            <div class="wide-input-box">
                <textarea name="Basically" class="form-control wide-input" rows="2" maxlength="280">@Model.Basically</textarea>
            </div>
        </div>

        <!-- FLAGS -->
        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Default tags</a></li>
            </ul>
            <div id="tabs-1">
                <div class="form-group row no-gutters">
                    @RatingLamp(spotlessRating)
                    @RatingLamp(f2pRating)

                    @foreach (var v in ratings.Where(x => Model.MonetizationFlags.Contains(x.Id)))
                    {
                        @RatingLamp(v)
                    }
                </div>
            </div>
        </div>

        <!-- DETAILED INFO -->
        <div class="form-group row no-gutters">
            <h3>@Html.LabelFor(model => model.RatingExplanation, new { @class = "control-label" })</h3>

            <div class="wide-input-box">
                <textarea name="RatingExplanation" class="form-control wide-input" rows="10" maxlength="4000">@Model.RatingExplanation</textarea>
                @Html.ValidationMessageFor(model => model.RatingExplanation, "", new { @class = "text-danger" })
            </div>
        </div>


        <!-- LINKS -->
        <div class="form-group row no-gutters input-fields-wrap">
            <h3>@Html.LabelFor(model => model.Links, new { @class = "control-label" })</h3>

            @if (Model.Links != null && Model.Links.Any())
            {
                for (var i = 0; i < Model.Links.Count; i++)
                {
                    if (i == 0)
                    {
                        <div class="wide-input-box d-inline-flex form-horizontal links-margin">
                            <input type="text" name="Links" class="form-control wide-input links-input" maxlength="500" value="@Model.Links[i]" />&emsp;<button href="#" class="add-field-element btn btn-primary">+</button>
                        </div>
                    }
                    else
                    {
                        <div class="wide-input-box d-inline-flex form-horizontal links-margin">
                            <input type="text" name="Links" class="form-control wide-input links-input" maxlength="500" value="@Model.Links[i]" />&emsp;<button href="#" class="remove_field btn btn-primary">-</button>
                        </div>
                    }
                }
            }
            else
            {
                <div class="wide-input-box d-inline-flex form-horizontal links-margin">
                    <input type="text" name="Links" class="form-control wide-input links-input" maxlength="500" />&emsp;<button href="#" class="add-field-element btn btn-primary">+</button>
                </div>
            }

        </div>

        <!-- RECAPTCHA -->

        @if (!Request.IsAuthenticated)
        {
            // Should only be shown to non-logged in users
            <div class="form-group row no-gutters">
                <h3>@Html.LabelFor(model => model.Comment, new { @class = "control-label" })</h3>

                <div class="wide-input-box">
                    <textarea name="Comment" class="form-control wide-input" rows="10" maxlength="1000" placeholder="Enter a comment for the mods - if this is an edit to an existing rating, please use this field to explain what you're changing and why. This will not be part of the published rating."></textarea>
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row no-gutters">
                <div>
                    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
                    <div class="g-recaptcha" data-sitekey="@WebConfigurationManager.AppSettings["ReCaptchaPublicKey"]" data-callback="captchaComplete"></div>
                </div>
            </div>
        }
        else
        {
            // Quiet update

            <div class="form-group row no-gutters">
                <div class="col-lg-3">
                    @Html.LabelFor(model => model.QuietUpdate, new { @class = "control-label" })
                </div>

                <div class="col-lg-9">
                    <div class="form-check">
                        <input type="checkbox" name="QuietUpdate" value="true" />
                        <label>&ensp;Yes</label>
                    </div>
                </div>
            </div>
        }

        <div class="successmessage"></div>
        <div class="failuremessage"></div>

        <div class="form-group row justify-content-end">
            <div class="col-sm-auto">
                <button type="button" class="btn btn-danger submission-form-cancel-button">Cancel</button>
            </div>

            <div class="col-sm-auto">
                @* If user is not logged in, button will be disabled until reCAPTCHA is completed *@
                <input type="submit" value="Save" class="btn btn-primary submission-form-submit-button" disabled="@(!Request.IsAuthenticated)" />
            </div>
        </div>
    </div>
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.AreYouSure/1.9.0/jquery.are-you-sure.min.js" integrity="sha256-5VKy5bw46U62DHG7pAhtXgsgmSjMSLjP5s4oQHW1LEI=" crossorigin="anonymous"></script>
@Scripts.Render("~/bundles/jqueryuiscript")
@Styles.Render("~/bundles/jqueryuistyle")
