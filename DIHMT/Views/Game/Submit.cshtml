@using DIHMT.Models
@using DIHMT.Static
@model RatingInputModel

@using (Html.BeginForm("SubmitRating", "Game"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Flags, htmlAttributes: new { @class = "control-label col-md-2 "})
            <div class="col-md-10">
                <p>
                    <label>
                        <input type="checkbox" name="Flags" value="@((int) EnumTag.Spotless)" checked="@Model.IsSpotless" class="spotless-checkbox"/> Spotless
                    </label>
                </p>
                
                <p>
                    <strong>Horse armor: </strong>
                    <ul>
                        <li>
                            <label>
                                <input type="radio" name="Flags" value="-1" checked="@(!(Model.Flags.Contains((int)EnumTag.HorseArmor) || Model.Flags.Contains((int)EnumTag.BulkOrderHorseArmor)))" class="check-when-spotless" /> None
                            </label>
                        </li>
                        <li>
                            <label>
                                <input type="radio" name="Flags" value="@((int)EnumTag.HorseArmor)" checked="@Model.Flags.Contains((int)EnumTag.HorseArmor)" class="monetization-input" disabled="@Model.IsSpotless" /> Some
                            </label>
                        </li>
                        <li>
                            <label>
                                <input type="radio" name="Flags" value="@((int)EnumTag.BulkOrderHorseArmor)" checked="@Model.Flags.Contains((int)EnumTag.BulkOrderHorseArmor)" class="monetization-input" disabled="@Model.IsSpotless"/> A lot
                            </label>
                        </li>
                    </ul>
                </p>

                @foreach (var v in GameHelpers.GetRatings().Where(x => Model.MonetizationFlags.Contains(x.Id) && x.Id > (int)EnumTag.Spotless))
                {
                    <p><label><input type="checkbox" name="Flags" value="@v.Id" checked="@Model.Flags.Contains(v.Id)" class="monetization-input" disabled="@Model.IsSpotless" /> @v.Name</label></p>
                }
                
                @foreach (var v in GameHelpers.GetRatings().Where(x => !Model.MonetizationFlags.Contains(x.Id) && x.Id > (int)EnumTag.Spotless))
                {
                    <p><label><input type="checkbox" name="Flags" value="@v.Id" checked="@Model.Flags.Contains(v.Id)" /> @v.Name</label></p>
                }
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Basically, htmlAttributes: new { @class = "control-label col-md-2 "})
            <div class="col-md-10">
                <input type="text" name="Basically" size="280" value="@Model.Basically" class="wide-input" maxlength="280" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RatingExplanation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea name="RatingExplanation" class="wide-input" rows="10" cols="100" maxlength="4000">@Model.RatingExplanation</textarea>
                @Html.ValidationMessageFor(model => model.RatingExplanation, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Links, htmlAttributes: new { @class = "control-label col-md-2 "})
            <div class="col-md-10 input-fields-wrap">
                <div>
                    <input type="text" name="Links" maxlength="500" />
                </div>
            </div>
            <div class="col-md-offset-2 col-md-10">
                <a href="#" class="add-field-element">[+]</a>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
