@using DIHMT.Models
@using DIHMT.Static
@model DisplayGame

<div class="list-item-box">
    <div class="game-small col-3 p-0">
        <img class="game-img-small" src="@Model.SmallImageUrl" alt="" />
    </div>

    <div class="list-item-text">
        <p class="list-game-platform">
            <strong><a href="@Url.Action("Index", "Game", new { id = Model.Id })" class="list-game-name indigo">@Model.Name</a></strong>
            <br />
            @for (var i = 0; i < Model.Platforms.Count; i++)
            {
                var write = i == Model.Platforms.Count - 1 ? Model.Platforms[i].Abbreviation : $"{Model.Platforms[i].Abbreviation} | ";

                <span class="list-platform">@write</span>
            }
        </p>

        @if (Model.IsRated)
        {
            if (!string.IsNullOrEmpty(Model.Basically))
            {
                <p>
                    <b>Basically, @Model.Name...</b> @Model.Basically&nbsp;-
                    <a href="@Url.Action("Index", "Game", new { id = Model.Id })">Details</a>
                </p>
            }

            else
            {
                <p>
                    <i>No summary description available</i>&nbsp;-
                    <a href="@Url.Action("Index", "Game", new { id = Model.Id })">Details</a>
                </p>
            }

        }
        else
        {
            <p>
                <i>We don't yet have a rating for this game - <a href="@Url.Action("Index", "Game", new { id = Model.Id })">click through</a> and hit the "Submit/Edit Rating"-button if you know what's up</i>
            </p>
        }
    </div>
</div>

<div class="flag-container d-block">
    <div class="flag-row flex-md-row justify-content-around">
        @{ 
            var ratings =
                Model.Ratings.Any(x => x.Id == (int)EnumTag.Spotless)
                ? GameHelpers.GetRatings().Where(x => x.Id == (int)EnumTag.Spotless || x.Id == (int)EnumTag.F2P)
                : GameHelpers.GetRatings().Where(x => x.Id != (int)EnumTag.Spotless); 
        }

        @foreach (var k in ratings)
        {
            if (Model.Ratings.Any(x => x.Id == k.Id))
            {
                <img src="@k.ImageUrl" class="flag-img" data-toggle="popover" data-placement="bottom" data-trigger="hover focus" title="@k.Name" data-content="@k.ShortDescription" />
            }

            else
            {
                <img src="@k.ImageUrl" class="flag-img inactive-flag-img" data-toggle="popover" data-placement="bottom" data-trigger="hover focus" title="@k.Name" data-content="@k.ShortDescription" />
            }
        }
    </div>
</div>

